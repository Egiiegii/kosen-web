{"ast":null,"code":"import _toConsumableArray from \"/Users/agantumu/kosen-web/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/agantumu/kosen-web/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/agantumu/kosen-web/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/agantumu/kosen-web/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/agantumu/kosen-web/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/agantumu/kosen-web/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/agantumu/kosen-web/client/src/Pagination.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nvar propTypes = {\n  items: PropTypes.array.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  initialPage: PropTypes.number,\n  pageSize: PropTypes.number,\n  currentPage: PropTypes.number\n};\nvar defaultProps = {\n  initialPage: 1,\n  pageSize: 10\n};\n\nvar Pagination =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Pagination, _React$Component);\n\n  function Pagination(props) {\n    var _this;\n\n    _classCallCheck(this, Pagination);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Pagination).call(this, props));\n    _this.state = {\n      pager: {}\n    };\n    var reg = /\\d+$/;\n    var url = String(location.href);\n    var notInitialPage = reg.test(url); // currentPage = url.match(reg)[0]\n    // console.log(currentPage)\n\n    return _this;\n  }\n\n  _createClass(Pagination, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      // set page if items array isn't empty\n      if (this.props.items && this.props.items.length) {\n        this.setPage(this.props.initialPage);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      // reset page if items array has changed\n      if (this.props.items !== prevProps.items) {\n        this.setPage(this.props.initialPage);\n      }\n    }\n  }, {\n    key: \"setPage\",\n    value: function setPage(page) {\n      var _this$props = this.props,\n          items = _this$props.items,\n          pageSize = _this$props.pageSize;\n      var pager = this.state.pager;\n\n      if (page < 1 || page > pager.totalPages) {\n        return;\n      } // get new pager object for specified page\n\n\n      pager = this.getPager(items.length, page, pageSize); // get new page of items from items array\n\n      var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1); // update state\n\n      this.setState({\n        pager: pager\n      }); // call change page function in parent component\n\n      this.props.onChangePage(pageOfItems);\n    }\n  }, {\n    key: \"getPager\",\n    value: function getPager(totalItems, currentPage, pageSize) {\n      // default to first page\n      currentPage = currentPage || 1; // default page size is 10\n\n      pageSize = pageSize || 10; // calculate total pages\n\n      var totalPages = Math.ceil(totalItems / pageSize);\n      var startPage, endPage;\n\n      if (totalPages <= 10) {\n        // less than 10 total pages so show all\n        startPage = 1;\n        endPage = totalPages;\n      } else {\n        // more than 10 total pages so calculate start and end pages\n        if (currentPage <= 6) {\n          startPage = 1;\n          endPage = 10;\n        } else if (currentPage + 4 >= totalPages) {\n          startPage = totalPages - 9;\n          endPage = totalPages;\n        } else {\n          startPage = currentPage - 5;\n          endPage = currentPage + 4;\n        }\n      } // calculate start and end item indexes\n\n\n      var startIndex = (currentPage - 1) * pageSize;\n      var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1); // create an array of pages to ng-repeat in the pager control\n\n      var pages = _toConsumableArray(Array(endPage + 1 - startPage).keys()).map(function (i) {\n        return startPage + i;\n      }); // return object with all pager properties required by the view\n\n\n      return {\n        totalItems: totalItems,\n        currentPage: currentPage,\n        pageSize: pageSize,\n        totalPages: totalPages,\n        startPage: startPage,\n        endPage: endPage,\n        startIndex: startIndex,\n        endIndex: endIndex,\n        pages: pages\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var pager = this.state.pager;\n\n      if (!pager.pages || pager.pages.length <= 1) {\n        // don't display pager if there is only 1 page\n        return null;\n      }\n\n      return React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"pagination\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: pager.currentPage === 1 ? 'disabled' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this2.setPage(1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"First\")), React.createElement(\"li\", {\n        className: pager.currentPage === 1 ? 'disabled' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this2.setPage(pager.currentPage - 1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Previous\")), pager.pages.map(function (page, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          className: pager.currentPage === page ? 'active' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: page.toString(),\n          onClick: function onClick() {\n            return _this2.setPage(page);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, page));\n      }), React.createElement(\"li\", {\n        className: pager.currentPage === pager.totalPages ? 'disabled' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this2.setPage(pager.currentPage + 1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Next\")), React.createElement(\"li\", {\n        className: pager.currentPage === pager.totalPages ? 'disabled' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this2.setPage(pager.totalPages);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Last\"))));\n    }\n  }]);\n\n  return Pagination;\n}(React.Component);\n\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps;\nexport default Pagination;","map":{"version":3,"sources":["/Users/agantumu/kosen-web/client/src/Pagination.js"],"names":["React","PropTypes","BrowserRouter","Route","Link","propTypes","items","array","isRequired","onChangePage","func","initialPage","number","pageSize","currentPage","defaultProps","Pagination","props","state","pager","reg","url","String","location","href","notInitialPage","test","length","setPage","prevProps","prevState","page","totalPages","getPager","pageOfItems","slice","startIndex","endIndex","setState","totalItems","Math","ceil","startPage","endPage","min","pages","Array","keys","map","i","index","toString","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter, Route, Link } from 'react-router-dom'\n\nconst propTypes = {\n    items: PropTypes.array.isRequired,\n    onChangePage: PropTypes.func.isRequired,\n    initialPage: PropTypes.number,\n    pageSize: PropTypes.number,\n    currentPage: PropTypes.number\n}\n\nconst defaultProps = {\n    initialPage: 1,\n    pageSize: 10\n}\n\nclass Pagination extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { pager: {} };\n        const reg = /\\d+$/;\n        const url = String(location.href)\n        const notInitialPage = reg.test(url)\n        // currentPage = url.match(reg)[0]\n        // console.log(currentPage)\n    }\n\n    componentWillMount() {\n        // set page if items array isn't empty\n        if (this.props.items && this.props.items.length) {\n            this.setPage(this.props.initialPage);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // reset page if items array has changed\n        if (this.props.items !== prevProps.items) {\n            this.setPage(this.props.initialPage);\n        }\n    }\n\n    setPage(page) {\n        var { items, pageSize } = this.props;\n        var pager = this.state.pager;\n\n        if (page < 1 || page > pager.totalPages) {\n            return;\n        }\n\n        // get new pager object for specified page\n        pager = this.getPager(items.length, page, pageSize);\n\n        // get new page of items from items array\n        var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\n\n        // update state\n        this.setState({ pager: pager });\n\n        // call change page function in parent component\n        this.props.onChangePage(pageOfItems);\n    }\n\n    getPager(totalItems, currentPage, pageSize) {\n        // default to first page\n        currentPage = currentPage || 1;\n\n        // default page size is 10\n        pageSize = pageSize || 10;\n\n        // calculate total pages\n        var totalPages = Math.ceil(totalItems / pageSize);\n\n        var startPage, endPage;\n        if (totalPages <= 10) {\n            // less than 10 total pages so show all\n            startPage = 1;\n            endPage = totalPages;\n        } else {\n            // more than 10 total pages so calculate start and end pages\n            if (currentPage <= 6) {\n                startPage = 1;\n                endPage = 10;\n            } else if (currentPage + 4 >= totalPages) {\n                startPage = totalPages - 9;\n                endPage = totalPages;\n            } else {\n                startPage = currentPage - 5;\n                endPage = currentPage + 4;\n            }\n        }\n\n        // calculate start and end item indexes\n        var startIndex = (currentPage - 1) * pageSize;\n        var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n        // create an array of pages to ng-repeat in the pager control\n        var pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\n\n        // return object with all pager properties required by the view\n        return {\n            totalItems: totalItems,\n            currentPage: currentPage,\n            pageSize: pageSize,\n            totalPages: totalPages,\n            startPage: startPage,\n            endPage: endPage,\n            startIndex: startIndex,\n            endIndex: endIndex,\n            pages: pages\n        };\n    }\n\n    render() {\n        var pager = this.state.pager;\n\n        if (!pager.pages || pager.pages.length <= 1) {\n            // don't display pager if there is only 1 page\n            return null;\n        }\n\n        return (\n            <BrowserRouter>\n                <ul className=\"pagination\">\n                    <li className={pager.currentPage === 1 ? 'disabled' : ''}>\n                        <a onClick={() => this.setPage(1)}>First</a>\n                    </li>\n                    <li className={pager.currentPage === 1 ? 'disabled' : ''}>\n                        <a onClick={() => this.setPage(pager.currentPage - 1)}>Previous</a>\n                    </li>\n                    {pager.pages.map((page, index) =>\n                        <li key={index} className={pager.currentPage === page ? 'active' : ''}>\n                            <Link to={page.toString()} onClick={() => this.setPage(page)}>{page}</Link>\n                        </li>\n                    )}\n                    <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\n                        <a onClick={() => this.setPage(pager.currentPage + 1)}>Next</a>\n                    </li>\n                    <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\n                        <a onClick={() => this.setPage(pager.totalPages)}>Last</a>\n                    </li>\n                </ul>\n            </BrowserRouter>\n        );\n    }\n}\n\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps;\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}